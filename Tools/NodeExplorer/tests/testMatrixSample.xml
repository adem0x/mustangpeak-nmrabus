<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xslt/testmatrix.xsl"?>
<TestMatrix xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://openlcb.org/trunk/prototypes/xml/schema/testmatrix.xsd">
  <Test>
    <Name>Get Node(s) under Test</Name>
    <Description>Identifies all nodes on the network using VerifyNodeID</Description>
    <Classname>TTestGetNodesUnderTest</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc></SpecDoc>
      <Objective>Send global Verify Node ID Message Network Layer Message</Objective>
      <Results>Verified Node ID from all nodes on the network</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Alias Map Enquiry</Name>
    <Description>Tests target for correct implementation of the Alias Map Enquiry (AME) Message</Description>
    <Classname>TTestAliasMapEnquiry</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"OpenLCB-CAN Frame Transfer Paragraph 6.2.3</SpecDoc>
      <Objective>Send AME message with no CAN data</Objective>
      <Results>Receive Alias Map Definition (AMD) from all nodes on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB-CAN Frame Transfer Paragraph 6.2.3</SpecDoc>
      <Objective>Send AME message with Full Node ID of node under test in the data payload</Objective>
      <Results>Receive Alias Map Definition (AMD) from node matching the Full Node ID in the data payload</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB-CAN Frame Transfer Paragraph 6.2.3</SpecDoc>
      <Objective>Send AME message with Full Node ID of non existent node in the data payload</Objective>
      <Results>No reply</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Verify Node </Name>
    <Description>Tests target for correct implementation of the VerifyNodeID message</Description>
    <Classname>TTestVerifyNodeID</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send Global Identify Nodes message with empty payload</Objective>
      <Results>All nodes on network reply with the target of interest included</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send Global Identify Nodes message with Full Node ID of node under test in data payload</Objective>
      <Results>Verified Node ID from target node on the network</Results>
    </TestObjective>
    <TestObjective>
      <Objective>Send Global Identify Nodes message with Full Node ID of non existent node in the data payload</Objective>
      <Results>No reply expected</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send Addressed Identify Nodes message with empty payload</Objective>
      <Results>Verified Node ID from target node on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send Addressed Identify Nodes message with Full Node ID in the data payload</Objective>
      <Results>Verified Node ID from target node on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send Addressed Identify Nodes message with Full Node ID in the data payload to the incorrect alias address</Objective>
      <Results>Verified Node ID from target node on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send incorrectly Addressed Identify Nodes message with empty payload</Objective>
      <Results>No response</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send incorrectly Addressed Identify Nodes message with Full Node ID in the data payload</Objective>
      <Results>No response</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"OpenLCB Message Network" Paragraph 2.6.2</SpecDoc>
      <Objective>Send incorrectly Addressed Identify Nodes message with Full Node ID in the data payload to the incorrect alias address</Objective>
      <Results>No response</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Protocol Identification Protocol (PIP)</Name>
    <Description>Requests what protocols a node supports, optional but recommended implementation</Description>
    <Classname>TTestProtocolSupport</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"Protocol Identification Protocol"</SpecDoc>
      <Objective>Test that NUT responds to PIP message addressed to it</Objective>
      <Results>Receive protocols supported by the node (or no response if does not support)</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"Protocol Identification Protocol"</SpecDoc>
      <Objective>Test that NUT does not respond to PIP message addressed to another</Objective>
      <Results>No response</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"Protocol Identification Protocol"</SpecDoc>
      <Objective>Test that NUT understands start and end bits in PIP message</Objective>
      <Results>One response</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Standard Frame Test</Name>
    <Description>Sends standard frames that a node should ignore</Description>
    <Classname>TTestStandardFrame</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Test that NUT does not reply to stardard CAN frames</Objective>
      <Results>No response</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Unknown MTI Addressed</Name>
    <Description>Sends undefined MTI values through an addressed message</Description>
    <Classname>TTestUnknownMTIAddressed</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Test that NUT does not reply to unknown MTI values</Objective>
      <Results>No response</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Alias Conflict</Name>
    <Description>Sends frames that conflict with the NUT Alias ID</Description>
    <Classname>TTestAliasConflict</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>TODO</SpecDoc>
      <Objective>Test that the NUT detects a global message with its Alias but not its full Node in the data payload</Objective>
      <Results>Reallocation of the NUT Alias</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>TODO</SpecDoc>
      <Objective>Test that the NUT detects a global message with its Alias and an empty data payload</Objective>
      <Results>Reallocation of the NUT Alias</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>TODO</SpecDoc>
      <Objective>Test that the NUT detects an addressed message with its Alias</Objective>
      <Results>Reallocation of the NUT Alias</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>TODO</SpecDoc>
      <Objective>Test that the NUT detects Check ID (CID) with its Alias</Objective>
      <Results>Sends a Reserve ID</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>TODO</SpecDoc>
      <Objective>Test that the NUT detects Reserve ID (RID) with its Alias</Objective>
      <Results>Reallocation of the NUT Alias</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Zero or Repeated Alias</Name>
    <Description>Forces repeated reallocation of the NUT Alias</Description>
    <Classname>TTestZeroOrRepeatedAllocation</Classname>
    <Enabled>False</Enabled>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Test that NUT does not allocate a 0 Alias or Repeat an Alias (Run 4095 reallocates)</Objective>
      <Results>Reallocated Alias (with associated CID, RID, AMD, etc messages) that is not 0 nor repeated from any point in the test</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Start up sequence</Name>
    <Description>Ensures correct message sequence on NUT start up (Requires manual turn on node)</Description>
    <Classname>TTestStartup</Classname>
    <Enabled>False</Enabled>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Tracks the message stream as the NUT boots and aquires a unique Alias ID on the bus</Objective>
      <Results>Four CID messages, one RID message, one AMD message, one Node Initialized message, and list of consumed and produced events</Results>
    </TestObjective>
  </Test>
  <Test>
    <Name>Events</Name>
    <Description>Retrieve supported events in the NUT</Description>
    <Classname>TTestEvents</Classname>
    <Enabled>True</Enabled>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Retrieve events from a global Identify Events message</Objective>
      <Results>Events supported by the nodes on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Retrieve events from an addressed Identify Events message</Objective>
      <Results>Events supported by the addressed node on the network</Results>
    </TestObjective>
    <TestObjective>
      <SpecDoc>"TODO:"</SpecDoc>
      <Objective>Should not respond to an addressed Identify Events message to a different node</Objective>
      <Results>No Reply</Results>
    </TestObjective>
  </Test>
</TestMatrix>