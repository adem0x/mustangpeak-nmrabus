unit NMRAnetConfigurationProtocol;

uses
  NMRAnetConfigurationProtocolDefines,
  NMRAnetDatagramDefines,
  NMRAnetDefines;

procedure NMRAnetConfigurationProtocol_Initialize;
procedure NMRAnetConfigurationProtocol_Process(NodeBuffer: PNMRAnetNodeBuffer);
procedure NMRAnetConfigurationProtocol_HandleDatagram(Datagram: PDatagramBuffer);
  


implementation

procedure NMRAnetConfigurationProtocol_Initialize;
begin
  ConfigurationProtocolInfo.iState := STATE_CONFIGPROTOCCOL_START;
end;

procedure HandleGetConfigurationOptions(Datagram: PDatagramBuffer);
begin
end;

procedure HandleWriteByDatagram(Datagram: PDatagramBuffer; ByMask: Boolean);
begin
end;

procedure HandleWriteByStream({Stream: PStreamBuffer,} ByMask: Boolean);
begin
  // UNIMPLEMENTED
end;


procedure HandleReadByDatagram(Datagram: PDatagramBuffer; ByMask: Boolean);
begin
end;

procedure HandleReadByStream({Stream: PStreamBuffer,} ByMask: Boolean);
begin
  // UNIMPLEMENTED
end;

procedure HandleGetAddressSpaceInfo(Datagram: PDatagramBuffer);
begin
end;

procedure HandleReserve(Datagram: PDatagramBuffer);
begin
end;

procedure HandleGetUniqueID(Datagram: PDatagramBuffer);
begin
end;

procedure HandleFreeze(Datagram: PDatagramBuffer);
begin
end;

procedure HandleIndicate(Datagram: PDatagramBuffer);
begin
end;

procedure HandleUpdate(Datagram: PDatagramBuffer);
begin
end;

procedure NMRAnetConfigurationProtocol_HandleDatagram(Datagram: PDatagramBuffer);
var
  ByMask: Boolean;
begin
  case Datagram^.DataBytes[1] and $C0 of                                        // Mask out the upper bits '11000000'
    CFG_CMD_WRITE : begin
            ByMask := Datagram^.DataBytes[1] and $10 <> 0;                      // Check the bit for by mask '00010000'
            case Datagram^.DataBytes[1] and $0C of                              // Mask out the bits, '00001100' we need
              $00 : HandleWriteByDatagram(Datagram, ByMask);                    // Bits 5, 4, 3, 2 = 'xxxx00xx'
              $04 : HandleWriteByStream({TODO,} ByMask);                        // Bits 5, 4, 3, 2 = 'xxxx01xx'
            end
          end;
    CFG_CMD_READ : begin
            case Datagram^.DataBytes[1] and $0C of                              // Mask out the bits, '00001100' we need
              $00 : HandleReadByDatagram(Datagram, ByMask);                     // Bits 5, 4, 3, 2 = 'xxxx00xx'
              $04 : HandleReadByStream({TODO,} ByMask);                         // Bits 5, 4, 3, 2 = 'xxxx01xx'
            end
          end;
    CFG_CMD_OPERATION : begin
            case Datagram^.DataBytes[1] of
              CFG_CMD_GET_CONFIG         : HandleGetConfigurationOptions(Datagram);
              CFG_CMD_GET_ADD_SPACE_INFO : HandleGetAddressSpaceInfo(Datagram);
              CFG_CMD_LOCK               : HandleReserve(Datagram);
              CFG_CMD_GET_UNIQUEID       : HandleGetUniqueID(Datagram);
              CFG_CMD_FREEZE             : HandleFreeze(Datagram);
              CFG_CMD_INDICATE           : HandleIndicate(Datagram);
              CFG_CMD_RESETS             : HandleUpdate(Datagram);
            end
          end;
  end
end;

procedure NMRAnetConfigurationProtocol_Process(NodeBuffer: PNMRAnetNodeBuffer);
begin
  case ConfigurationProtocolInfo.iState of
    STATE_CONFIGPROTOCCOL_START : begin end;
  end;
end;

end.