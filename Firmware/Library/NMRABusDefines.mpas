unit NMRABusDefines;

// ******************************************************************************
//
// * Copyright:
//     (c) Mustangpeak Software 2012.
//
//     The contents of this file are subject to the GNU GPL v3 licence/ you maynot use
//     this file except in compliance with the License. You may obtain a copy of the
//     License at http://www.gnu.org/licenses/gpl.html
//
// * Revision History:
//     2012-02-01:   Created
//
// * Description:

//
// *****************************************************************************

{$I Options.inc}

const
  MAX_BUS_LOGIN_TIMEOUT = 51;              // Number of 1ms time tick to wait for a node to send a RID to signal a duplicate Alais

  CAN_TX_0 = 0;
  CAN_TX_1 = 1;
  CAN_TX_2 = 2;

  CAN_RX_0 = 0;
  CAN_RX_1 = 1;

  CAN_TX_PRIORITY_0 = 0;
  CAN_TX_PRIORITY_1 = 1;
  CAN_TX_PRIORITY_2 = 2;
  CAN_TX_PRIORITY_3 = 3;

// *****************************************************************************
//  Extended CAN Frames
//  29 Bits Divided as follows:
//     - 1 Bit = Priority (1 = Low Priority typical)
//     - 4 Bits = Frame Type (FT_xxxx Constants)
//     - 12 Bits = Destination Node Address Alias or Message Type (MT_xxx Constants)
//     - 12 Bits = Source Node Address Alias
//
// Frame Types.  These define what the Frame of the CAN message consists of.
const
  FT_CAN                            = $00000000;  // Frame Type CAN Control Message
  FT_CID0                           = $07000000;  // First 12 Bits of 48 bit Node ID
  FT_CID1                           = $06000000;  // 2rd 12 Bits of 48 bit Node ID
  FT_CID2                           = $05000000;  // 3nd 12 Bits of 48 bit Node ID
  FT_CID3                           = $04000000;  // Last 12 Bits of 48 bit Node ID
  FT_CID4                           = $03000000;  // non-OpenLCB Protocol
  FT_CID5                           = $02000000;  // non-OpenLCB Protocol
  FT_CID6                           = $01000000;  // non-OpenLCB Protocol

  
  FT_CID_MASK                       = $07000000;
  FT_RID                            = $00700000;  // Reserve ID
  FT_AMD                            = $00701000;  // Alias Map Definition
  FT_AME                            = $00702000;  // Alias Mapping Enquiry
  FT_AMR                            = $00703000;  // Alias Map Reset Frame


  FT_INITIALIZATION_COMPLETE        = $09087000;
  FT_VERIFY_NODE_ID_NUMBER_DEST     = $0E000000;
  FT_VERIFY_NODE_ID_NUMBER_NO_DEST  = $080A7000;
  FT_VERIFIED_NODE_ID_NUMBER        = $080B7000;
  FT_OPTIONAL_INTERACTION_REJECTED  = $0E000000;
  FT_TERMINATE_DUE_TO_ERROR         = $0E000000;
  
  FT_DATAGRAM_FRAME                 = $0C000000;
  FT_DATAGRAM_FRAME_END             = $0D000000;
  FT_DATAGRAM_FRAME_RESULT          = $0E000000;

//  FT_BROADCAST_1     = $08;  // Broadcast Message
//  FT_BROADCAST_2     = $09;  // Broadcast Message again....
//  FT_DATAGRAM_FIRST  = $0C;  // First Frame of Datagram
//  FT_DATAGRAM_LAST   = $0D;  // Last Frame of Datagram
//  FT_DATAGRAM_SINGLE = $0E;  // Single Frame Datagram
 // FT_STREAM          = $0F;  // Stream Data
  
  MASK_DEST_ALIAS_FORMAT = $06000000;  // Bits to see if the OpenLCB Format bits say it contains a Dest ID (110)
  MASK_DEST_ALIAS        = $00FFF000;  // Masks out just the Destination Alias Address
  MASK_SOURCE_ALIAS      = $00000FFF;  // Masks out just the Source Alias Address

  // NMRABus States
  BS_PERMITED          = $01;    // CAN Frame Layer is permitted (Node ID's resolved with bus)
  BS_INITIALIZED       = $02;    // Message Layer has sent its first Initialize Complete Message


type
  TNodeID = array[0..1] of DWORD;    // The Bottom 3 Bytes = [0] and the Top 3 Bytes = [1]
  TNodeAliasID = Word;


  TNMRABus = record
    Node_ID: TNodeID;                // Unique 48 Bit ID for Node
    Unique_ID_Global_Seed: TNodeID;  // Seed for Random Number Generator in case we have to reseed because of a duplicate ID
    Node_Alias_ID: TNodeAliasID;     // 12 Bit Alias ID
    BusLoginCount: Integer;          // Increment through the Global Timer to time out when the Spec for waiting for other nodes to send the RID for a duplicate Alias ID
    State: Word;                     // See the BS_xxxx flags; State of the Bus; these are ONLY CHANGED OUTSIDE OF an interrupt and concedered READ-ONLY inside of an interrupt
    Interrupt_State: Byte;           // See the BSI_xxxx flags; State of the Bus Messaging System that is running through the interrupts, these are ONLY CHANGED FROM WITHIN the interrupt and concidered READ-ONLY outside of the interrupt
  end;
  
var
  NMRABus: TNMRABus;

implementation

end.