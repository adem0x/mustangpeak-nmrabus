unit MCU_Setup_dsPIC33FJ256GP710A;

uses
  Throttle_driver,
  NodeIDs;

{$I Options.inc}

const
  CAN_SWJ        = 1;               // Set up for 125Khz Baud Rate with a 16Mhz Crystal
  CAN_BRP        = 9;               // All in terms of number of Tq actual value in register will be BRP-1
  CAN_PHASESEG_1 = 4;               // All in terms of number of Tq actual value in register will be CAN_PHASESEG_1-1
  CAN_PHASESEG_2 = 5;               // All in terms of number of Tq actual value in register will be CAN_PHASESEG_2-1
  CAN_PROP_SEG   = 5;               // All in terms of number of Tq actual value in register will be CAN_PROP_SEG-1


  procedure MCU_Setup_Initialize;

var
  PinChangeState: Word;

implementation

procedure Interrupt_Timer2(); iv IVT_ADDR_T2INTERRUPT;
begin
  T2IF_bit := 0;  // Reset the Flag
end;

procedure MCU_Setup_Initialize;
begin
  ADPCFG := 0xFFFF;                                     // configure AN pins as digital I/O
  
  LATG3_bit := 0;
  TRISG3_bit := 0;

  PinChangeState := 0;
  
  {$IFDEF UART_ENABLE}
  // Initialize UART
  UART1_Init(115200);                       // Initialize UART module a
  Delay_ms(100);                            // Wait for UART module to stabilize

  U1MODE.ALTIO := 1;     // Un-comment this line to have Rx and Tx pins on their alternate locations. This is used to free the pins for other module, namely the SPI.
  {$ENDIF}

  SPI1_Init();       // Initialize SPI1 module
  SPIEN_bit := 0;    // Disable SPI
  SPI1CON := SPI1CON and $FFE0;  // Clear the prescaler bits
  SPI1CON := SPI1CON or $0003 or $0018;  // Setup for 5 Mhz (with the CAN plug in boards)     $10=5Mhz, $14=6.67Mhz, $18 = 10Mhz
  SPI1IF_bit := 0;   // Clear the Flag
  SPI1IE_bit := 1;   // Enable SPI 1 Interrupts
  SPI1IP_0_bit := 1; // Interrupt Priority of the SPI is 1 (001)
  SPI1IP_1_bit := 0;
  SPI1IP_2_bit := 0;
  SPIEN_bit := 1;    // Enable the SPI

  T2IP_0_bit := 0;          // Timer 2 Interrupt Priority = 2   (1 means off)
  T2IP_1_bit := 1;
  T2IP_2_bit := 0;
  PR2 := 20000;             // Clock ticks every 50ns * 20000 = 1ms interrupts
  T2IF_bit := 0;            // Clear T2IF
  T2IE_bit := 1;            // Enable the Interrupt
  TON_T2CON_bit := 1;       // Turn on


  PinChangeState := PORTF;

end;

end.