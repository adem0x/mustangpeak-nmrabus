unit Throttle_events_code;

uses Throttle_objects, Throttle_resources, dsPIC33_CAN, dsPIC33_DMA, CANStorage, MCU_Setup_dsPIC33FJ256GP710A;

procedure Button9Click();
procedure Button7Click();
procedure ButtonRound12Click();
procedure ButtonRound13Click();
procedure ButtonRound10Click();
procedure ButtonRound11Click();
//--------------------- Externals ---------------------//
const Box2 : TCBox; code; far; external;
const Box1 : TCBox; code; far; external;
var ButtonPrev : TButton; external;
var ButtonPrev_Caption : string[4]; external;
var ButtonNext : TButton; external;
var ButtonNext_Caption : string[4]; external;
const Box3 : TCBox; code; far; external;
const Label20 : TCLabel; code; far; external;
const Label21 : TCLabel; code; far; external;
var LabelReceived : TLabel; external;
var LabelReceived_Caption : string[12]; external;
var LabelTransmitted : TLabel; external;
var LabelTransmitted_Caption : string[12]; external;
const Box4 : TCBox; code; far; external;
const Box5 : TCBox; code; far; external;
const Box6 : TCBox; code; far; external;
var Button1 : TButton; external;
var Button1_Caption : string[4]; external;
var Button2 : TButton; external;
var Button2_Caption : string[4]; external;
const Box14 : TCBox; code; far; external;
const Box13 : TCBox; code; far; external;
const Box15 : TCBox; code; far; external;
const LabelSpeed : TCLabel; code; far; external;
var LabelAddress : TLabel; external;
var LabelAddress_Caption : string[7]; external;
var Line1 : TLine; external;
var Line2 : TLine; external;
var Button9 : TButton; external;
var Button9_Caption : string[4]; external;
var Button7 : TButton; external;
var Button7_Caption : string[4]; external;
var ButtonRound12 : TButton_Round; external;
var ButtonRound12_Caption : string[3]; external;
var ButtonRound13 : TButton_Round; external;
var ButtonRound13_Caption : string[3]; external;
var ButtonRound14 : TButton_Round; external;
var ButtonRound14_Caption : string[4]; external;
var ButtonRound1 : TButton_Round; external;
var ButtonRound1_Caption : string[8]; external;
var ButtonAddress : TButton; external;
var ButtonAddress_Caption : string[3]; external;
var ButtonRound20 : TButton_Round; external;
var ButtonRound20_Caption : string[16]; external;
var ButtonRound2 : TButton_Round; external;
var ButtonRound2_Caption : string[16]; external;
var ButtonRound3 : TButton_Round; external;
var ButtonRound3_Caption : string[16]; external;
var ButtonRound4 : TButton_Round; external;
var ButtonRound4_Caption : string[16]; external;
var ButtonRound5 : TButton_Round; external;
var ButtonRound5_Caption : string[16]; external;
var ButtonRound6 : TButton_Round; external;
var ButtonRound6_Caption : string[16]; external;
var ButtonRound7 : TButton_Round; external;
var ButtonRound7_Caption : string[16]; external;
var ButtonRound8 : TButton_Round; external;
var ButtonRound8_Caption : string[16]; external;
var ButtonRound9 : TButton_Round; external;
var ButtonRound9_Caption : string[16]; external;
var ButtonRoundF9 : TButton_Round; external;
var ButtonRoundF9_Caption : string[16]; external;
var ButtonRoundF10 : TButton_Round; external;
var ButtonRoundF10_Caption : string[16]; external;
var ButtonRoundF11 : TButton_Round; external;
var ButtonRoundF11_Caption : string[16]; external;
var ButtonRoundF12 : TButton_Round; external;
var ButtonRoundF12_Caption : string[16]; external;
var ButtonRoundF13 : TButton_Round; external;
var ButtonRoundF13_Caption : string[16]; external;
var ButtonRoundF14 : TButton_Round; external;
var ButtonRoundF14_Caption : string[16]; external;
var ButtonRoundF15 : TButton_Round; external;
var ButtonRoundF15_Caption : string[16]; external;
var ButtonRoundF16 : TButton_Round; external;
var ButtonRoundF16_Caption : string[16]; external;
var ButtonRoundF17 : TButton_Round; external;
var ButtonRoundF17_Caption : string[16]; external;
var ButtonRoundF18 : TButton_Round; external;
var ButtonRoundF18_Caption : string[32]; external;
var ButtonRoundF19 : TButton_Round; external;
var ButtonRoundF19_Caption : string[32]; external;
var ButtonRoundF20 : TButton_Round; external;
var ButtonRoundF20_Caption : string[32]; external;
var ButtonRoundF21 : TButton_Round; external;
var ButtonRoundF21_Caption : string[32]; external;
var ButtonRoundF22 : TButton_Round; external;
var ButtonRoundF22_Caption : string[32]; external;
var ButtonRoundF23 : TButton_Round; external;
var ButtonRoundF23_Caption : string[32]; external;
var ButtonRoundF24 : TButton_Round; external;
var ButtonRoundF24_Caption : string[32]; external;
var ButtonRoundF25 : TButton_Round; external;
var ButtonRoundF25_Caption : string[32]; external;
var ButtonRoundF26 : TButton_Round; external;
var ButtonRoundF26_Caption : string[32]; external;
var ButtonRound10 : TButton_Round; external;
var ButtonRound10_Caption : string[16]; external;
var ButtonRound11 : TButton_Round; external;
var ButtonRound11_Caption : string[16]; external;
const Box10 : TCBox; code; far; external;
const Box11 : TCBox; code; far; external;
const Box12 : TCBox; code; far; external;
var Button5 : TButton; external;
var Button5_Caption : string[7]; external;
var Button6 : TButton; external;
var Button6_Caption : string[4]; external;
var Label1 : TLabel; external;
var Label1_Caption : string[26]; external;
var ButtonRound15 : TButton_Round; external;
var ButtonRound15_Caption : string[20]; external;
var ButtonRound16 : TButton_Round; external;
var ButtonRound16_Caption : string[26]; external;
var ButtonRound17 : TButton_Round; external;
var ButtonRound17_Caption : string[35]; external;
var ButtonRound18 : TButton_Round; external;
var ButtonRound18_Caption : string[33]; external;
var ButtonRound19 : TButton_Round; external;
var ButtonRound19_Caption : string[36]; external;
var ButtonRound21 : TButton_Round; external;
var ButtonRound21_Caption : string[17]; external;
const Box7 : TCBox; code; far; external;
const Box8 : TCBox; code; far; external;
const Box9 : TCBox; code; far; external;
var Button3 : TButton; external;
var Button3_Caption : string[4]; external;
var Button4 : TButton; external;
var Button4_Caption : string[4]; external;
var Screen_CAN           : TScreen; external;
var ScreenTemplate           : TScreen; external;
var ScreenThrottle           : TScreen; external;
var ScreenConsists           : TScreen; external;
var Screen3           : TScreen; external;
procedure DrawScreen(aScreen : ^TScreen); external;
procedure DrawButton(Abutton : ^TButton); external;
procedure DrawRoundButton(Around_button : ^TButton_Round); external;
procedure DrawLabel(ALabel : ^TLabel); external;
procedure DrawCLabel(ALabel : ^TCLabel); external;
procedure DrawCBox(ABox : ^TCBox); external;
procedure DrawLine(Aline : ^TLine); external;
//----------------- End of Externals ------------------//

//-------------- User code declarations ---------------//

var
  Base: ^Word;
  Offset, ECAN_RegPage, DMA_RegPage: Integer;
  
procedure WriteCANModuleRegisters(Offset: Word);
procedure WriteBuffer(WordPtr: ^Word; BufferID: Integer);
procedure WriteDMAModuleRegisters(Channel: Integer);

//-------------- End of User code declarations --------//

implementation

//--------------------- User code ---------------------//
  {
  
uses Throttle_objects, Throttle_resources, dsPIC33_CAN, dsPIC33_DMA, CANStorage, MCU_Setup_dsPIC33FJ256GP710A;

   }
   
procedure WriteCANModuleRegisters(Offset: Word);
var
  s1: array[0..32] of char;
begin
  case Offset of
    0: begin
          WordToHex(C1CFG1, s1);
          s1 := 'C1CFG1: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1CFG2, s1);
          s1 := 'C1CFG2: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1FEN1, s1);
          s1 := 'C1FEN1: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);
          
          WIN_Bit := 1;
          
          WordToHex(C1RXF0SID, s1);
          s1 := 'C1RXF0SID: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);
          
          WordToHex(C1RXF0EID, s1);
          s1 := 'C1RXF0EID: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1RXF1SID, s1);
          s1 := 'C1RXF1SID: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1RXF1EID, s1);
          s1 := 'C1RXF1EID: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1RXF2SID, s1);
          s1 := 'C1RXF2SID: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1RXF2EID, s1);
          s1 := 'C1RXF2EID: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    1: begin
          WIN_Bit := 1;
          
          WordToHex(C1RXF3SID, s1);
          s1 := 'C1RXF3SID: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1RXF3EID, s1);
          s1 := 'C1RXF3EID: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1RXF4SID, s1);
          s1 := 'C1RXF4SID: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1RXF4EID, s1);
          s1 := 'C1RXF4EID: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1RXF5SID, s1);
          s1 := 'C1RXF5SID: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1RXF5EID, s1);
          s1 := 'C1RXF5EID: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1RXF6SID, s1);
          s1 := 'C1RXF6SID: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1RXF6EID, s1);
          s1 := 'C1RXF6EID: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1RXF7SID, s1);
          s1 := 'C1RXF7SID: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    2: begin
          WIN_Bit := 1;
           
          WordToHex(C1RXF7EID, s1);
          s1 := 'C1RXF7EID: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1RXF8SID, s1);
          s1 := 'C1RXF8SID: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1RXF8EID, s1);
          s1 := 'C1RXF8EID: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1RXF9SID, s1);
          s1 := 'C1RXF9SID: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1RXF9EID, s1);
          s1 := 'C1RXF9EID: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1RXF10SID, s1);
          s1 := 'C1RXF10SID: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1RXF10EID, s1);
          s1 := 'C1RXF10EID: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1RXF11SID, s1);
          s1 := 'C1RXF11SID: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1RXF11EID, s1);
          s1 := 'C1RXF11EID: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    3: begin
          WIN_Bit := 1;
           
          WordToHex(C1RXF12SID, s1);
          s1 := 'C1RXF12SID: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1RXF12EID, s1);
          s1 := 'C1RXF12EID: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1RXF13SID, s1);
          s1 := 'C1RXF13SID: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1RXF13EID, s1);
          s1 := 'C1RXF13EID: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1RXF14SID, s1);
          s1 := 'C1RXF14SID: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1RXF14EID, s1);
          s1 := 'C1RXF14EID: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1RXF15SID, s1);
          s1 := 'C1RXF15SID: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1RXF15EID, s1);
          s1 := 'C1RXF15EID: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1RXM0SID, s1);
          s1 := 'C1RXM0SID: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    4: begin
          WIN_Bit := 1;
            
          WordToHex(C1RXM0EID, s1);
          s1 := 'C1RXM0EID: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1RXM1SID, s1);
          s1 := 'C1RXM1SID: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1RXM1EID, s1);
          s1 := 'C1RXM1EID: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1RXM2SID, s1);
          s1 := 'C1RXM2SID: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1RXM2EID, s1);
          s1 := 'C1RXM2EID: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1FMSKSEL1, s1);
          s1 := 'C1FMSKSEL1: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1FMSKSEL2, s1);
          s1 := 'C1FMSKSEL2: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1BUFPNT1, s1);
          s1 := 'C1BUFPNT1: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1BUFPNT2, s1);
          s1 := 'C1BUFPNT2: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    5: begin
          WIN_Bit := 1;
          
          WordToHex(C1BUFPNT3, s1);
          s1 := 'C1BUFPNT3: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1BUFPNT4, s1);
          s1 := 'C1BUFPNT4: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WIN_Bit := 0;
          
          WordToHex(C1RXFUL1, s1);
          s1 := 'C1RXFUL1: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1RXFUL2, s1);
          s1 := 'C1RXFUL2: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1RXOVF1, s1);
          s1 := 'C1RXOVF1: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1RXOVF2, s1);
          s1 := 'C1RXOVF2: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1FCTRL, s1);
          s1 := 'C1FCTRL: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1FIFO, s1);
          s1 := 'C1FIFO: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1INTF, s1);
          s1 := 'C1INTF: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    6: begin
          WIN_Bit := 0;
          
          WordToHex(C1INTE, s1);
          s1 := 'C1INTE: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1VEC, s1);
          s1 := 'C1VEC: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(C1CTRL1, s1);
          s1 := 'C1CTRL1: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(C1CTRL2, s1);
          s1 := 'C1CTRL2: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(C1TR01CON, s1);
          s1 := 'C1TR01CON: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(C1TR23CON, s1);
          s1 := 'C1TR23CON: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(C1TR45CON, s1);
          s1 := 'C1TR45CON: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(C1TR67CON, s1);
          s1 := 'C1TR67CON: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(C1EC, s1);
          s1 := 'C1EC: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    7: begin
          WordToHex(C1RXD, s1);
          s1 := 'C1RXD: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(C1TXD, s1);
          s1 := 'C1TXD: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

        //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          s1 := 'C1TR67CON: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          //  WordToHex(C1CTRL1, s1);
          s1 := ' ' + s1 ;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
   end;
end;
   
procedure WriteBuffer(WordPtr: ^Word; BufferID: Integer);
var
  s2, s1: array[0..64] of char;
begin
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF18.Caption, s1);
  DrawRoundButton(@ButtonRoundF18);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF19.Caption, s1);
  DrawRoundButton(@ButtonRoundF19);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF20.Caption, s1);
  DrawRoundButton(@ButtonRoundF20);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF21.Caption, s1);
  DrawRoundButton(@ButtonRoundF21);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF22.Caption, s1);
  DrawRoundButton(@ButtonRoundF22);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF23.Caption, s1);
  DrawRoundButton(@ButtonRoundF23);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF24.Caption, s1);
  DrawRoundButton(@ButtonRoundF24);

  Inc(WordPtr);
  WordToHex(WordPtr, s2);
  s1 := '$' + s2;
  s1 := s1 + ' = ';
  WordToHex(WordPtr^, s2);
  s1 := s1 + s2;
  strcpy(ButtonRoundF25.Caption, s1);
  DrawRoundButton(@ButtonRoundF25);

  IntToStr(BufferID, s2);
  s1 := 'Buffer: ' + s2;
  strcpy(ButtonRoundF26.Caption, s1);
  DrawRoundButton(@ButtonRoundF26);
end;
   
procedure UpdateRaw(Tail: PCANRawBuffer);
var
  s1: array[0..64] of char;
begin
    WordToHex(Tail^.Word0, s1);
    s1 := 'Word0: $' + s1 ;
    strcpy(ButtonRoundF18.Caption, s1);
    DrawRoundButton(@ButtonRoundF18);

    WordToHex(Tail^.Word1, s1);
    s1 := 'Word1: $' + s1 ;
    strcpy(ButtonRoundF19.Caption, s1);
    DrawRoundButton(@ButtonRoundF19);
    
    WordToHex(Tail^.Word2, s1);
    s1 := 'Word2: $' + s1 ;
    strcpy(ButtonRoundF20.Caption, s1);
    DrawRoundButton(@ButtonRoundF20);

    WordToHex(Tail^.Word3, s1);
    s1 := 'Word3: $' + s1 ;
    strcpy(ButtonRoundF21.Caption, s1);
    DrawRoundButton(@ButtonRoundF21);
    
    WordToHex(Tail^.Word4, s1);
    s1 := 'Word4: $' + s1 ;
    strcpy(ButtonRoundF22.Caption, s1);
    DrawRoundButton(@ButtonRoundF22);

    WordToHex(Tail^.Word5, s1);
    s1 := 'Word5: $' + s1 ;
    strcpy(ButtonRoundF23.Caption, s1);
    DrawRoundButton(@ButtonRoundF23);
    
    WordToHex(Tail^.Word6, s1);
    s1 := 'Word6: $' + s1 ;
    strcpy(ButtonRoundF24.Caption, s1);
    DrawRoundButton(@ButtonRoundF24);

    WordToHex(Tail^.Word7, s1);
    s1 := 'Word7: $' + s1 ;
    strcpy(ButtonRoundF25.Caption, s1);
    DrawRoundButton(@ButtonRoundF25);
end;

procedure WriteDMAModuleRegisters(Channel: Integer);
var
  s1: array[0..32] of char;
begin
  case Channel of
    0: begin
          WordToHex(DMA0CON, s1);
          s1 := 'DMA0CON: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(DMA0REQ, s1);
          s1 := 'DMA0REQ: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(DMA0STA, s1);
          s1 := 'DMA0STA: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(DMA0STB, s1);
          s1 := 'DMA0STB: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(DMA0PAD, s1);
          s1 := 'DMA0PAD: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(DMA0CNT, s1);
          s1 := 'DMA0CNT: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(DSADR, s1);
          s1 := 'DSADR: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(DMACS0, s1);
          s1 := 'DMACS0: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(DMACS1, s1);
          s1 := 'DMACS1: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    1: begin
          WordToHex(DMA1CON, s1);
          s1 := 'DMA1CON: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(DMA1REQ, s1);
          s1 := 'DMA1REQ: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(DMA1STA, s1);
          s1 := 'DMA1STA: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(DMA1STB, s1);
          s1 := 'DMA1STB: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(DMA1PAD, s1);
          s1 := 'DMA1PAD: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(DMA1CNT, s1);
          s1 := 'DMA1CNT: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(DSADR, s1);
          s1 := 'DSADR: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(DMACS0, s1);
          s1 := 'DMACS0: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(DMACS1, s1);
          s1 := 'DMACS1: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    2: begin
          WordToHex(DMA2CON, s1);
          s1 := 'DMA2CON: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(DMA2REQ, s1);
          s1 := 'DMA2REQ: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(DMA2STA, s1);
          s1 := 'DMA2STA: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(DMA2STB, s1);
          s1 := 'DMA2STB: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(DMA2PAD, s1);
          s1 := 'DMA2PAD: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(DMA2CNT, s1);
          s1 := 'DMA2CNT: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(DSADR, s1);
          s1 := 'DSADR: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(DMACS0, s1);
          s1 := 'DMACS0: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(DMACS1, s1);
          s1 := 'DMACS1: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    3: begin
          WordToHex(DMA3CON, s1);
          s1 := 'DMA3CON: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(DMA3REQ, s1);
          s1 := 'DMA3REQ: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(DMA3STA, s1);
          s1 := 'DMA3STA: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(DMA3STB, s1);
          s1 := 'DMA3STB: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(DMA3PAD, s1);
          s1 := 'DMA3PAD: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(DMA3CNT, s1);
          s1 := 'DMA3CNT: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(DSADR, s1);
          s1 := 'DSADR: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(DMACS0, s1);
          s1 := 'DMACS0: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(DMACS1, s1);
          s1 := 'DMACS1: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    4: begin
          WordToHex(DMA4CON, s1);
          s1 := 'DMA4CON: ' + s1 ;
          strcpy(ButtonRoundF18.Caption, s1);
          DrawRoundButton(@ButtonRoundF18);

          WordToHex(DMA4REQ, s1);
          s1 := 'DMA4REQ: ' + s1 ;
          strcpy(ButtonRoundF19.Caption, s1);
          DrawRoundButton(@ButtonRoundF19);

          WordToHex(DMA4STA, s1);
          s1 := 'DMA4STA: ' + s1 ;
          strcpy(ButtonRoundF20.Caption, s1);
          DrawRoundButton(@ButtonRoundF20);

          WordToHex(DMA4STB, s1);
          s1 := 'DMA4STB: ' + s1 ;
          strcpy(ButtonRoundF21.Caption, s1);
          DrawRoundButton(@ButtonRoundF21);

          WordToHex(DMA4PAD, s1);
          s1 := 'DMA4PAD: ' + s1 ;
          strcpy(ButtonRoundF22.Caption, s1);
          DrawRoundButton(@ButtonRoundF22);

          WordToHex(DMA4CNT, s1);
          s1 := 'DMA4CNT: ' + s1 ;
          strcpy(ButtonRoundF23.Caption, s1);
          DrawRoundButton(@ButtonRoundF23);

          WordToHex(DSADR, s1);
          s1 := 'DSADR: ' + s1 ;
          strcpy(ButtonRoundF24.Caption, s1);
          DrawRoundButton(@ButtonRoundF24);

          WordToHex(DMACS0, s1);
          s1 := 'DMACS0: ' + s1 ;
          strcpy(ButtonRoundF25.Caption, s1);
          DrawRoundButton(@ButtonRoundF25);

          WordToHex(DMACS1, s1);
          s1 := 'DMACS1: ' + s1;
          strcpy(ButtonRoundF26.Caption, s1);
          DrawRoundButton(@ButtonRoundF26);
       end;
    end
end;

//----------------- End of User code ------------------//

// Event Handlers


procedure ButtonRound10Click();
begin
  Dec(Offset);
 // if Offset < 0 then
//    Offset := 9;
  WriteBuffer(Base + (Offset*8), Offset);
end;

procedure ButtonRound11Click();
begin
  Inc(Offset);
 // if Offset > 9 then
 //   Offset := 0;
  WriteBuffer(Base + (Offset*8), Offset);
    
end;

procedure ButtonRound12Click();
begin
  Inc(ECAN_RegPage);
  if ECAN_RegPage > 7 then
    ECAN_RegPage := 0;
  WriteCANModuleRegisters(ECAN_RegPage);
end;

procedure ButtonRound13Click();
begin
 Dec(ECAN_RegPage);
  if ECAN_RegPage < 0 then
    ECAN_RegPage := 7;
  WriteCANModuleRegisters(ECAN_RegPage);
end;

procedure Button9Click();
begin
  Dec(DMA_RegPage);
  if DMA_RegPage < 0 then
    DMA_RegPage := 4;
  WriteDMAModuleRegisters(DMA_RegPage);
end;

procedure Button7Click();
begin
  Inc(DMA_RegPage);
  if DMA_RegPage > 4 then
    DMA_RegPage := 0;
  WriteDMAModuleRegisters(DMA_RegPage);
end;

end.