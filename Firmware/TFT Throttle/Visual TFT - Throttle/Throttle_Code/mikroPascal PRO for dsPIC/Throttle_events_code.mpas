unit Throttle_events_code;

uses Throttle_objects, Throttle_resources;

procedure BoxRoundCmdStationsClick();
procedure BoxRoundAccyNodesClick();
procedure BoxRoundProgStationsClick();
procedure BoxRoundTrainNodesClick();
procedure ButtonDropDownItem0Click();
procedure ButtonDropdownItem1Click();
procedure ButtonDropdownItem2Click();
procedure ButtonDropdownItem3Click();
procedure ButtonDropdownItem4Click();
procedure ButtonDropdownItem5Click();
procedure ButtonDropdownItem6Click();
procedure ButtonDropdownItem7Click();
procedure ButtonDropdownItem8Click();
procedure ButtonDropDownItem9Click();
//--------------------- Externals ---------------------//
const Bkgnd : TCBox; code; far; external;
const Label2 : TCLabel; code; far; external;
const Label3 : TCLabel; code; far; external;
var BoxRound1 : TBox_Round; external;
const Label4 : TCLabel; code; far; external;
var BoxRoundProgressBar : TBox_Round; external;
const Label5 : TCLabel; code; far; external;
var BoxRound3 : TBox_Round; external;
var Image1 : TImage; external;
var BoxBkGnd : TBox; external;
const Label7 : TCLabel; code; far; external;
const Label1 : TCLabel; code; far; external;
const Label6 : TCLabel; code; far; external;
const Label8 : TCLabel; code; far; external;
var BoxRoundCmdStations : TBox_Round; external;
var BoxRoundAccyNodes : TBox_Round; external;
var LabelCmdStationNodes : TLabel; external;
var LabelCmdStationNodes_Caption : string[32]; external;
var LabelAccyNodes : TLabel; external;
var LabelAccyNodes_Caption : string[32]; external;
var BoxRoundProgStations : TBox_Round; external;
var BoxRoundTrainNodes : TBox_Round; external;
var LabelProgNodes : TLabel; external;
var LabelProgNodes_Caption : string[32]; external;
var LabelTrainNodes : TLabel; external;
var LabelTrainNodes_Caption : string[32]; external;
var BoxDropDownFrame : TBox; external;
var ButtonDropDownItem0 : TButton; external;
var ButtonDropDownItem0_Caption : string[4]; external;
var BoxDropdownScrollbar : TBox; external;
var ButtonDropDownItem1 : TButton; external;
var ButtonDropDownItem1_Caption : string[4]; external;
var ButtonDropDownItem2 : TButton; external;
var ButtonDropDownItem2_Caption : string[4]; external;
var ButtonDropDownItem3 : TButton; external;
var ButtonDropDownItem3_Caption : string[4]; external;
var ButtonDropDownItem4 : TButton; external;
var ButtonDropDownItem4_Caption : string[4]; external;
var ButtonDropDownItem5 : TButton; external;
var ButtonDropDownItem5_Caption : string[4]; external;
var ButtonDropDownItem6 : TButton; external;
var ButtonDropDownItem6_Caption : string[4]; external;
var ButtonDropDownItem7 : TButton; external;
var ButtonDropDownItem7_Caption : string[4]; external;
var ButtonDropDownItem8 : TButton; external;
var ButtonDropDownItem8_Caption : string[4]; external;
var ButtonDropDownItem9 : TButton; external;
var ButtonDropDownItem9_Caption : string[4]; external;
const ScreenStart           : TCScreen; code; far;  external;
var ScreenDetectingNodes           : TScreen; external;
procedure DrawScreen(aScreenID : word); external;
procedure DrawButton(Abutton : ^TButton); external;
procedure DrawLabel(ALabel : ^TLabel); external;
procedure DrawCLabel(ALabel : ^TCLabel); external;
procedure DrawImage(AImage : ^TImage); external;
procedure DrawBox(ABox : ^TBox); external;
procedure DrawCBox(ABox : ^TCBox); external;
procedure DrawRoundBox(Around_box : ^TBox_Round); external;
//----------------- End of Externals ------------------//

//-------------- User code declarations ---------------//


//-------------- End of User code declarations --------//

implementation

//--------------------- User code ---------------------//

procedure ShowDropDown(Active: Byte);
begin
  BoxDropdownScrollbar.Visible := Active;
  ButtonDropdownItem0.Visible := Active;  
  ButtonDropdownItem1.Visible := Active;  
  ButtonDropdownItem2.Visible := Active;
  ButtonDropdownItem3.Visible := Active;
  ButtonDropdownItem4.Visible := Active;
  ButtonDropdownItem5.Visible := Active;
  ButtonDropdownItem6.Visible := Active;
  ButtonDropdownItem7.Visible := Active;
  ButtonDropdownItem8.Visible := Active;
  ButtonDropdownItem9.Visible := Active;
  BoxDropdownFrame.Visible := Active;
  
  ButtonDropdownItem0.Active := Active;  
  ButtonDropdownItem1.Active := Active;  
  ButtonDropdownItem2.Active := Active;
  ButtonDropdownItem3.Active := Active;
  ButtonDropdownItem4.Active := Active;
  ButtonDropdownItem5.Active := Active;
  ButtonDropdownItem6.Active := Active;  
  ButtonDropdownItem7.Active := Active;  
  ButtonDropdownItem8.Active := Active;  
  ButtonDropdownItem9.Active := Active;   
  BoxDropdownScrollbar.Active := Active;
  BoxDropdownFrame.Active := Active;
  
  if Active = 1 then
  begin
    BoxRoundCmdStations.Active := 0;
    BoxRoundProgStations.Active := 0;
    BoxRoundTrainNodes.Active := 0;
    BoxRoundAccyNodes.Active := 0;
  end else
  begin
    BoxRoundCmdStations.Active := 1;
    BoxRoundProgStations.Active := 1;
    BoxRoundTrainNodes.Active := 1;
    BoxRoundAccyNodes.Active := 1;
  end;
  
  if Active = 1 then
  begin
    DrawBox(@BoxDropdownFrame);
    DrawBox(@BoxDropdownScrollbar);
    DrawButton(@ButtonDropdownItem0);
    DrawButton(@ButtonDropdownItem1);
    DrawButton(@ButtonDropdownItem2);
    DrawButton(@ButtonDropdownItem3);
    DrawButton(@ButtonDropdownItem4);
    DrawButton(@ButtonDropdownItem5);
    DrawButton(@ButtonDropdownItem6);
    DrawButton(@ButtonDropdownItem7);
    DrawButton(@ButtonDropdownItem8);
    DrawButton(@ButtonDropdownItem9);
  end else
  begin  
    DrawScreen(ScreenDetectingNodesScreenID);
  end
end;

//----------------- End of User code ------------------//

// Event Handlers

procedure ButtonDropDownItem0Click();
begin
  ShowDropDown(0);  
end;

procedure ButtonDropdownItem1Click();
begin
  ShowDropDown(False);
end;

procedure ButtonDropdownItem2Click();
begin
  ShowDropDown(False);
end;

procedure ButtonDropdownItem3Click();
begin
  ShowDropDown(False);
end;

procedure ButtonDropdownItem4Click();
begin
  ShowDropDown(False);
end;

procedure ButtonDropdownItem5Click();
begin
  ShowDropDown(False);
end;

procedure ButtonDropdownItem6Click();
begin
  ShowDropDown(0);  
end;

procedure ButtonDropdownItem7Click();
begin
  ShowDropDown(0);  
end;

procedure ButtonDropdownItem8Click();
begin
  ShowDropDown(0);  
end;

procedure ButtonDropDownItem9Click();
begin
  ShowDropDown(0);  
end;

procedure BoxRoundCmdStationsClick();
begin
  ShowDropDown(1);    
end;

procedure BoxRoundTrainNodesClick();
begin
  ShowDropDown(1);  
end;

procedure BoxRoundProgStationsClick();
begin
  ShowDropDown(1);  
end;

procedure BoxRoundAccyNodesClick();
begin
  ShowDropDown(1);  
end;

end.
