unit Throttle_objects;

type TOnEventPtr = procedure();

type TBytePtr = ^byte;

type TButton_Round = record
  OwnerScreenID        : word;
  Order                : byte;
  Left                 : word;
  Top                  : word;
  Width                : word;
  Height               : word;
  Pen_Width            : byte;
  Pen_Color            : word;
  Visible              : byte;
  Active               : byte;
  Transparent          : byte;
  Caption              : ^char;
  Fontname             : ^ const far byte;
  Font_Color           : word;
  Gradient             : byte;
  Gradient_Orientation : byte;
  Gradient_Start_Color : word;
  Gradient_End_Color   : word;
  Color                : word;
  PressColEnabled      : byte;
  Press_Color          : word;
  OnUpPtr              : ^TOnEventPtr;
  OnDownPtr            : ^TOnEventPtr;
  OnClickPtr           : ^TOnEventPtr;
  OnPressPtr           : ^TOnEventPtr;
end;

type TCLabel = record
  OwnerScreenID        : word;
  Order                : byte;
  Left                 : word;
  Top                  : word;
  Width                : word;
  Height               : word;
  Caption              : ^ const far char;
  Fontname             : ^ const far byte;
  Font_Color           : word;
  Visible              : byte;
  Active               : byte;
  OnUpPtr              : ^TOnEventPtr;
  OnDownPtr            : ^TOnEventPtr;
  OnClickPtr           : ^TOnEventPtr;
  OnPressPtr           : ^TOnEventPtr;
end; code; far;

type TCBox = record
  OwnerScreenID        : word;
  Order                : byte;
  Left                 : word;
  Top                  : word;
  Width                : word;
  Height               : word;
  Pen_Width            : byte;
  Pen_Color            : word;
  Visible              : byte;
  Active               : byte;
  Transparent          : byte;
  Gradient             : byte;
  Gradient_Orientation : byte;
  Gradient_Start_Color : word;
  Gradient_End_Color   : word;
  Color                : word;
  PressColEnabled      : byte;
  Press_Color          : word;
  OnUpPtr              : ^TOnEventPtr;
  OnDownPtr            : ^TOnEventPtr;
  OnClickPtr           : ^TOnEventPtr;
  OnPressPtr           : ^TOnEventPtr;
end; code; far;

type TBox_Round = record
  OwnerScreenID        : word;
  Order                : byte;
  Left                 : word;
  Top                  : word;
  Width                : word;
  Height               : word;
  Pen_Width            : byte;
  Pen_Color            : word;
  Visible              : byte;
  Active               : byte;
  Transparent          : byte;
  Gradient             : byte;
  Gradient_Orientation : byte;
  Gradient_Start_Color : word;
  Gradient_End_Color   : word;
  Color                : word;
  PressColEnabled      : byte;
  Press_Color          : word;
  OnUpPtr              : ^TOnEventPtr;
  OnDownPtr            : ^TOnEventPtr;
  OnClickPtr           : ^TOnEventPtr;
  OnPressPtr           : ^TOnEventPtr;
end;

type TCBox_Round = record
  OwnerScreenID        : word;
  Order                : byte;
  Left                 : word;
  Top                  : word;
  Width                : word;
  Height               : word;
  Pen_Width            : byte;
  Pen_Color            : word;
  Visible              : byte;
  Active               : byte;
  Transparent          : byte;
  Gradient             : byte;
  Gradient_Orientation : byte;
  Gradient_Start_Color : word;
  Gradient_End_Color   : word;
  Color                : word;
  PressColEnabled      : byte;
  Press_Color          : word;
  OnUpPtr              : ^TOnEventPtr;
  OnDownPtr            : ^TOnEventPtr;
  OnClickPtr           : ^TOnEventPtr;
  OnPressPtr           : ^TOnEventPtr;
end; code; far;

type TCScreen = record
  Color                      : word;
  Width                      : word;
  Height                     : word;
  ObjectsCount               : byte;
  CLabelsCount               : word;
  CLabels                    : ^ const code far ^TCLabel;
  CBoxesCount                : word;
  CBoxes                     : ^ const code far ^TCBox;
  Boxes_RoundCount           : word;
  Boxes_Round                : ^ const code far ^TBox_Round;
end; code; far;

type TScreen = record
  Color                      : word;
  Width                      : word;
  Height                     : word;
  ObjectsCount               : byte;
  Buttons_RoundCount         : word;
  Buttons_Round              : ^ const code far ^TButton_Round;
  CLabelsCount               : word;
  CLabels                    : ^ const code far ^TCLabel;
  CBoxesCount                : word;
  CBoxes                     : ^ const code far ^TCBox;
  CBoxes_RoundCount          : word;
  CBoxes_Round               : ^ const code far ^TCBox_Round;
end;

type TMyScreen = record
  Color                      : word;
  Width                      : word;
  Height                     : word;
  ObjectsCount               : byte;
  Buttons_RoundCount         : word;
  Buttons_Round              : ^ const code far ^TButton_Round;
  CLabelsCount               : word;
  CLabels                    : ^ const code far ^TCLabel;
  CBoxesCount                : word;
  CBoxes                     : ^ const code far ^TCBox;
  Boxes_RoundCount           : word;
  Boxes_Round                : ^ const code far ^TBox_Round;
  CBoxes_RoundCount          : word;
  CBoxes_Round               : ^ const code far ^TCBox_Round;
end;


  const ScreenStartScreenID = 32768;
  const ScreenDetectingNodesScreenID = 0;

implementation

end.
