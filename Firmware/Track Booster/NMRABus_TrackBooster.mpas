program NMRABus_TrackBooster;

// ******************************************************************************
//
// * Copyright:
//     (c) Mustangpeak Software 2012.
//
//     The contents of this file are subject to the GNU GPL v3 licence/ you maynot use
//     this file except in compliance with the License. You may obtain a copy of the
//     License at http://www.gnu.org/licenses/gpl.html
//
// * Revision History:
//     2012-02-01:   Created
//
// * Description:

//
// *****************************************************************************

uses
  NMRAnetStateMachine,
  NMRAnetDefines,
  CANDefines,
  CANStorage,
  MCU_Setup_dsPIC4013,
  NMRAnetEventDefines,
  NMRAnetBufferPools,
  NMRAnetBufferPoolsDefines,
  NMRAnetNode,
  dsPIC30_Traps,
  NodeIDs;

{$I Options.inc}


// *****************************************************************************
//  INTERRUPTS
// *****************************************************************************

procedure INTERRUPT_Global_Timer(); iv IVT_ADDR_T2INTERRUPT;
// Called once every 100m
var
  i: Integer;
begin
  // Silicon Bug in the 4013, if Interrupt is disabled, then Interrupt 2 of higher priority is called (nested) an Address Trap can be thrown
  {$IFDEF FIX_NESTED_INTERRUPT_SILICON_BUG} asm DISI #2; end; {$ENDIF}
  T2IF_bit := 0;                                                                // Clear the Flag
  for i := 0 to Nodes.Count - 1 do
    NMRAnetStateMachine_100ms_Timer(Nodes.AllocatedList[i]);
end;


{$IFDEF PINCHANGE_INTERRUPT_ENABLE}
procedure INTERRUPT_Pin_Change_Notification(); iv IVT_ADDR_CNINTERRUPT;         // 93us when a TransmitCompleteOnCANLayerPacket called with new Tx Packet waiting
var
  Flags: Byte;
begin
  // Silicon Bug in the 4013, if Interrupt is disabled, then Interrupt 2 of higher priority is called (nested) an Address Trap can be thrown
  {$IFDEF FIX_NESTED_INTERRUPT_SILICON_BUG} asm DISI #2; end; {$ENDIF}
  CNIF_bit := 0;     // Clear Flag
  
 // LATD0_bit := not DCC_CMD_In;
  
  PWM_A_HI := 0;
  PWM_A_LO := 0;
  PWM_B_HI := 0;
  PWM_B_LO := 0;
  
  if DCC_CMD_In = 0 then
  begin
    PWM_A_HI := 1;
    PWM_B_LO := 1;
  end else
  begin
    PWM_A_LO := 1;
    PWM_B_HI := 1;
  end;
  
  PinChangeState := PORTF;
end;
{$ENDIF}


// *******************
// MAIN LOOP
// *******************
var
  ActiveNode: PNMRAnetNode;
begin
  _25AAxxxx_Initialize;
  CANStorage_Initialize;
  NMRAnetStateMachine_Initialize(MUSTANGPEAK_ID_0_HI, MUSTANGPEAK_TRACKBOOSTER_ID_0_LO);
  MCU_Setup_Initialize;

  while (TRUE) do
  begin
    ActiveNode := NMRAnetNode_NextNode;
    if ActiveNode <> PNMRAnetNode( nil) then
    begin
      NMRAnetStateMachine_Process(ActiveNode);
    end;
  end
end.