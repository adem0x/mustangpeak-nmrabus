unit NMRAnetAppDefines;

uses
  NMRAnetEventDefines,
  CANDefines,
  NMRAnetDefines;
  
{$I Options.inc}

const

  ABBREVIATED_CDI_MFG = 'Mustangpeak';
  ABBREVIATED_CDI_MFG_NAME = 'DCC Track Booster';
  ABBREVIATED_CDI_MFG_HW_VER = '1.0.0';
  ABBREVIATED_CDI_MFG_SW_VER = '0.0.1';

  ABBREVIATED_CDI_USER_NAME = 'Rico District';
  ABBREVIATED_CDI_USER_DISC = 'Mustangpeak DCC Track Booster Prototype';

  PIV_SUPPORTED_PROTOCOL_COUNT = 4;    // UPDATED THIS IF ADDING OR SUBTRACTING SUPPORTED PROTOCOLS
  PIV_SUPPORTED_PROTOCOLS: array[0..PIV_SUPPORTED_PROTOCOL_COUNT-1] of TPIVProtocolValueArray = (
    ($80, $00, $00, $00, $00, $00),                                             // PIV_PROTOCOL_ID_PROTOCOL
    ($40, $00, $00, $00, $00, $00),                                             // PIV_PROTOCOL_ID_DATAGRAM
    ($04, $00, $00, $00, $00, $00),                                             //PIV_PROTOCOL_ID_PRODUCER_CONSUMER
    ($00, $40, $00, $00, $00, $00)                                              // PIV_PROTOCOL_ID_CDI
    );

  // DEFINED IN OPTIONS.INC
  // Set the number of Events that are Consumed and Produced by this Node
  {$IFDEF SUPPORT_AT_LEAST_ONE_CONSUMED_EVENT} MAX_SUPPORTED_EVENTS_CONSUMED = 1; {$ELSE} MAX_SUPPORTED_EVENTS_CONSUMED = 0; {$ENDIF}
  {$IFDEF SUPPORT_AT_LEAST_ONE_PRODUCED_EVENT} MAX_SUPPORTED_EVENTS_PRODUCED = 2; {$ELSE} MAX_SUPPORTED_EVENTS_PRODUCED = 0; {$ENDIF}
  
  MAX_SUPPORTED_EVENTS = MAX_SUPPORTED_EVENTS_PRODUCED + MAX_SUPPORTED_EVENTS_CONSUMED;
  
  {$IFDEF SUPPORT_AT_LEAST_ONE_CONSUMED_EVENT}
  // Defined the Values of the Events that are Consumed and Produced by this Node
  SUPPORTED_EVENTS_CONSUMED: array[0..MAX_SUPPORTED_EVENTS_CONSUMED-1] of TEventID = (
    ($05, $01, $01, $01, $07, $00, $F0, $FF)
  );
  {$ENDIF}
  {$IFDEF SUPPORT_AT_LEAST_ONE_PRODUCED_EVENT}
  SUPPORTED_EVENTS_PRODUCED: array[0..MAX_SUPPORTED_EVENTS_PRODUCED-1] of TEventID = (
    ($01, $01, $00, $00, $00, $00, $FF, $FF)                                    // EVENT_EMERGENCY_STOP
  );
  {$ENDIF}
  
implementation

end.